returnProductDetails =>

1. SELECT S.NAME, P.NAME, P.DESCRIPTION, P.EXPECTED_TIME_TO_DELIVER, P.PRICE, C. CATEGORY_NAME, ROUND(AVG_RATING(P.PRODUCT_ID), 1), P.PRODUCT_ID,
(SELECT PERCENTAGE_DISCOUNT FROM OFFER O WHERE O.PRODUCT_ID = P.PRODUCT_ID AND END_DATE>SYSDATE),
(SELECT COUNT(*) FROM PRODUCT_UNIT PU WHERE P.PRODUCT_ID = PU.PRODUCT_ID AND STATUS = 'not sold'), S.SELLER_ID
FROM PRODUCT P 
JOIN SELLER S ON(P.SELLER_ID = S.SELLER_ID)
JOIN CATEGORY C ON(P.CATEGORY_ID = C.CATEGORY_ID)
WHERE P.PRODUCT_ID = :prod_pk;

2. SELECT CUS.FIRST_NAME||' '||CUS.LAST_NAME AS NAME, RVW.REVIEW_DATE,
RVW.RATING, RVW.DESCRIPTION
FROM REVIEW RVW JOIN CUSTOMER CUS
ON(RVW.CUSTOMER_ID = CUS.CUSTOMER_ID)
WHERE PRODUCT_ID = :prod_id;



returnAddOffer =>

3. SELECT PRODUCT.NAME
FROM PRODUCT LEFT OUTER JOIN SELLER
ON(PRODUCT.SELLER_ID = SELLER.SELLER_ID)
WHERE SELLER.EMAIL_ID =: email_id
		MINUS
SELECT PRODUCT.NAME
FROM PRODUCT LEFT OUTER JOIN SELLER
ON(PRODUCT.SELLER_ID = SELLER.SELLER_ID)
LEFT OUTER JOIN OFFER
ON(PRODUCT.PRODUCT_ID = OFFER.PRODUCT_ID)
WHERE SELLER.EMAIL_ID =: email_id AND OFFER.END_DATE > SYSDATE;



returnCheckOut =>

4. SELECT prod.NAME, prod.PRICE, sell.NAME, sell.SELLER_ID, 
prod.PRODUCT_ID, OFFR.PERCENTAGE_DISCOUNT,
(SELECT COUNT(*) FROM PRODUCT_UNIT PU WHERE prod.PRODUCT_ID = PU.PRODUCT_ID AND STATUS = 'not sold')
FROM PRODUCT prod JOIN SELLER sell
ON(prod.SELLER_ID = sell.SELLER_ID)
LEFT JOIN OFFER OFFR
ON(OFFR.PRODUCT_ID = prod.PRODUCT_ID AND OFFR.END_DATE>SYSDATE)
WHERE prod.PRODUCT_ID = :prod_id;



