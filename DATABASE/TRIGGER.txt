1.

CREATE OR REPLACE TRIGGER SELLER_BALANCE_UPDATE
AFTER INSERT
ON ORDERED_ITEMS
FOR EACH ROW

DECLARE

	PROD_ID NUMBER;
	SLR_ID NUMBER;
	PROD_PRICE NUMBER;
	DISCOUNT NUMBER;
	OFFER_CNT NUMBER;
	NEW_BALANCE NUMBER;
	OLD_BALANCE NUMBER;

BEGIN

	PROD_ID := :NEW.PRODUCT_ID;
	SLR_ID := :NEW.SELLER_ID;

	SELECT PRICE INTO PROD_PRICE 
	FROM PRODUCT 
	WHERE PRODUCT_ID=PROD_ID;
	
	SELECT BALANCE INTO OLD_BALANCE 
	FROM SELLER 
	WHERE SELLER_ID=SLR_ID;
	
	SELECT COUNT(*) INTO OFFER_CNT
	FROM OFFER O 
	WHERE O.PRODUCT_ID = PROD_ID AND O.END_DATE>SYSDATE;
	
	IF OFFER_CNT = 0 THEN
		DISCOUNT := 0;
	ELSE
		SELECT NVL(PERCENTAGE_DISCOUNT, 0) INTO DISCOUNT
		FROM OFFER O 
		WHERE O.PRODUCT_ID = PROD_ID AND O.END_DATE>SYSDATE;
	
	END IF;
	
	NEW_BALANCE := OLD_BALANCE + PROD_PRICE - PROD_PRICE*DISCOUNT/100;
	
	UPDATE SELLER SET BALANCE=NEW_BALANCE WHERE SELLER_ID=SLR_ID;

END;
/


2.

CREATE OR REPLACE TRIGGER PRODUCT_STATUS_UPDATE
AFTER INSERT
ON ORDERED_ITEMS
FOR EACH ROW

DECLARE

	PROD_ID NUMBER;
	ITM_NO NUMBER;

BEGIN

	PROD_ID := :NEW.PRODUCT_ID;
	ITM_NO := :NEW.ITEM_NUMBER;

	UPDATE PRODUCT_UNIT SET STATUS='sold' 
	WHERE PRODUCT_ID=PROD_ID AND ITEM_NUMBER=ITM_NO;

END;
/