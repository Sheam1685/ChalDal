1.

CREATE OR REPLACE FUNCTION AVG_RATING(PROD_ID IN NUMBER) 
RETURN NUMBER IS
	
	avgRating NUMBER;
	total NUMBER;
	rev_no NUMBER;
	
BEGIN

	total :=0;
	FOR rev IN (SELECT RATING FROM REVIEW WHERE PRODUCT_ID=PROD_ID)
	LOOP
		total := total + rev.RATING;
	
	END LOOP;
	
	SELECT COUNT(*) INTO rev_no
	FROM REVIEW 
	WHERE PRODUCT_ID=PROD_ID;
	
	avgRating := total/rev_no;
	
	RETURN avgRating;
	
EXCEPTION
	WHEN ZERO_DIVIDE THEN
		RETURN 0;
	WHEN OTHERS THEN
		RETURN 0;

END;



2. 

CREATE OR REPLACE FUNCTION REVIEW_CHECKER(PROD_ID IN NUMBER, CUS_EMAIL IN VARCHAR2) 
RETURN VARCHAR2 IS
	
	CUS_ID NUMBER;
	REV_NO NUMBER;
	
BEGIN

	SELECT CUSTOMER_ID INTO CUS_ID
	FROM CUSTOMER 
	WHERE EMAIL_ID = CUS_EMAIL;
	
	SELECT COUNT(*) INTO REV_NO
	FROM REVIEW
	WHERE PRODUCT_ID=PROD_ID AND CUSTOMER_ID=CUS_ID;
	
	IF REV_NO>0 THEN
		RETURN 'Reviewed';
	ELSE
		RETURN 'Not Reviewed';
	END IF;

END;
/


3.

CREATE OR REPLACE FUNCTION GET_ITEM_NO(PROD_ID IN NUMBER) 
RETURN NUMBER IS
	
	ITM_NO NUMBER;
	
BEGIN

	SELECT MIN(ITEM_NUMBER) INTO ITM_NO 
	FROM PRODUCT_UNIT 
	WHERE PRODUCT_ID=PROD_ID AND STATUS='not sold';
	RETURN ITM_NO;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		ITM_NO := -1;
	WHEN OTHERS THEN
		ITM_NO := -2;

END;
/
